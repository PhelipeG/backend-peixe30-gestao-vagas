// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Job {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  location    String
  salaryRange String
  skills      String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  invitations Invitation[]

  @@map("jobs")
}

model Candidate {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  email           String   @unique
  skills          String[]
  experienceYears Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  invitations Invitation[]

  @@map("candidates")
}

model Invitation {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  jobId       String   @db.ObjectId
  candidateId String   @db.ObjectId
  invitedAt   DateTime @default(now())

  job       Job       @relation(fields: [jobId], references: [id], onDelete: Cascade)
  candidate Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)

  @@unique([jobId, candidateId])
  @@map("invitations")
}
